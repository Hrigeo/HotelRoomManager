
@using HotelRoomManager.Data.Models.Rooms 
@using HotelRoomManager.Models.View_Models.RoomViewModels
@using static HotelRoomManager.Emuns.Class
@model IEnumerable<RoomListViewModel>

@{
    ViewData["Title"] = "Rooms";

    Func<Availability, string> statusText = a => a == Availability.Available ? "Available" : "Not Available";

    Func<Availability, string> badgeClass = a => a == Availability.Available ? "badge bg-success" : "badge bg-danger";
}

<h1 class="mb-3">@ViewData["Title"]</h1>

<p>
    <a asp-controller="Rooms" asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Number</th>
            <th>Capacity</th>
            <th>Price / Night</th>
            <th>Room Type</th>
            <th>Availability</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var room in Model)
            {
                <tr>
                    <td>@room.Number</td>
                    <td>@room.Capacity</td>
                    <td>@room.PricePerNight.ToString("C")</td>
                    <td>@room.RoomTypeName</td>
                    <td>
                        <span class="@badgeClass(room.Availability)">@statusText(room.Availability)</span>
                    </td>
                    <td class="text-nowrap">
                        <a asp-action="Details" asp-route-id="@room.Id">Details</a> |
                        <a asp-action="Edit" asp-route-id="@room.Id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@room.Id">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center text-muted">No rooms found.</td>
            </tr>
        }
    </tbody>
</table>
