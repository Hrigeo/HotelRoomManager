@using HotelRoomManager.Models.ViewModels.RoomViewModels
@model RoomsFilterViewModel
@{
    ViewData["Title"] = "Rooms";
    var roomTypes = ViewBag.RoomTypes as IEnumerable<SelectListItem>;

    bool isAdmin = User?.Identity?.IsAuthenticated == true && User.IsInRole("Admin");
}

<h2 class="mb-3">@ViewData["Title"]</h2>

@if (isAdmin)
{
    <p class="d-flex justify-content-end">
        <a asp-controller="Rooms" asp-action="Create" class="btn btn-primary">
            Create A Room
        </a>
    </p>
}


<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <select name="RoomTypeId" class="form-select">
            <option value="">All types</option>
            @if (roomTypes != null)
            {
                foreach (var rt in roomTypes)
                {
                    <option value="@rt.Value" selected="@(rt.Selected ? "selected" : null)">@rt.Text</option>
                }
            }
        </select>
    </div>
    <div class="col-auto">
        <input type="number" name="MinCapacity" value="@(Model.MinCapacity ?? null)" class="form-control" placeholder="Min capacity" min="1" />
    </div>
    <div class="col-auto">
        <input type="hidden" name="Page" value="1" />
        <input type="hidden" name="PageSize" value="@Model.PageSize" />
        <button type="submit" class="btn btn-primary">Filter</button>
        <a asp-action="Index" class="btn btn-outline-secondary ms-2">Reset</a>
    </div>
</form>

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th>Number</th>
            <th>Capacity</th>
            <th>Price / Night</th>
            <th>Room Type</th>
            <th>Availability</th>
            <th style="width: 220px;">Actions</th>
        </tr>

    </thead>
    <tbody>
        @foreach (var room in Model.Items)
        {
            <tr>
                <td>@room.Number</td>
                <td>@room.Capacity</td>
                <td>@room.PricePerNight.ToString("C")</td>
                <td>@room.RoomTypeName</td>
                <td>
                    <span class="@badgeClass(room.Availability)">@statusText(room.Availability)</span>
                </td>
                <td class="text-end">
                    <div class="btn-group" role="group">
                        <a class="btn btn-sm btn-outline-secondary"
                           asp-action="Details" asp-route-id="@room.Id">Details</a>

                        @if (isAdmin)
                        {
                            <a class="btn btn-sm btn-outline-primary"
                               asp-action="Edit" asp-route-id="@room.Id">Edit</a>

                            <form asp-action="Delete" asp-route-id="@room.Id" method="post" class="d-inline"
                                  onsubmit="return confirm('Delete room @room.Number?');">
                                <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                            </form>
                        }

                    </div>          
                    @if (room.Availability)
                        @functions {  
                            private string badgeClass(bool availability)  
                            {  
                                return availability ? "badge bg-success" : "badge bg-danger";  
                            }  

                            private string statusText(bool availability)  
                            {  
                                return availability ? "Available" : "Unavailable";  
                            }  
                        }
                        <a class="btn btn-sm btn-success ms-2"
                           asp-controller="Booking" asp-action="Create" asp-route-roomId="@room.Id">Book</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Rooms pages" class="mt-3">
        <ul class="pagination">
            <li class="page-item @(Model.HasPrev ? "" : "disabled")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-Page="@(Model.Page - 1)"
                   asp-route-PageSize="@Model.PageSize"
                   asp-route-RoomTypeId="@(Model.RoomTypeId)"
                   asp-route-MinCapacity="@(Model.MinCapacity)">Prev</a>
            </li>

            <li class="page-item disabled">
                <span class="page-link">Page @Model.Page of @Model.TotalPages</span>
            </li>

            <li class="page-item @(Model.HasNext ? "" : "disabled")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-Page="@(Model.Page + 1)"
                   asp-route-PageSize="@Model.PageSize"
                   asp-route-RoomTypeId="@(Model.RoomTypeId)"
                   asp-route-MinCapacity="@(Model.MinCapacity)">Next</a>
            </li>
        </ul>
    </nav>
}
