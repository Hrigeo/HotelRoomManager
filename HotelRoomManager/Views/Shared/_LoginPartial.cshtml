@using HotelRoomManager.Data.Models.User
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Rooms";


    Func<bool, string> statusText = a => a == true ? "Available" : "Not Available";
    Func<bool, string> badgeClass = a => a == true ? "badge bg-success" : "badge bg-danger";

    bool isAdmin = User?.Identity?.IsAuthenticated == true && User.IsInRole("Admin");
}


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if(isAdmin)
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Booking" asp-action="All">All Bookings</a>
        </li>
    }
    else
    {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Booking" asp-action="Index">My Bookings</a>
            </li>
    }



    
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
